// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VN_Center.Data;

#nullable disable

namespace VN_Center.Migrations
{
    [DbContext(typeof(VNCenterDbContext))]
    [Migration("20250515232305_AnadirUsuarioCreadorASolicitudes")]
    partial class AnadirUsuarioCreadorASolicitudes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VN_Center.Models.Entities.BeneficiarioAsistenciaRecibida", b =>
                {
                    b.Property<int>("BeneficiarioID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("TipoAsistenciaID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("NotasAdicionales")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("BeneficiarioID", "TipoAsistenciaID");

                    b.HasIndex("TipoAsistenciaID");

                    b.ToTable("BeneficiarioAsistenciaRecibida");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.BeneficiarioGrupos", b =>
                {
                    b.Property<int>("BeneficiarioID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("GrupoID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("FechaUnionGrupo")
                        .HasColumnType("DATE");

                    b.Property<string>("RolEnGrupo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BeneficiarioID", "GrupoID");

                    b.HasIndex("GrupoID");

                    b.ToTable("BeneficiarioGrupos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Beneficiarios", b =>
                {
                    b.Property<int>("BeneficiarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiarioID"));

                    b.Property<string>("AccesibilidadServiciosTransporteComunidad")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("AccesoComputadora")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccesoInternet")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BarrerasAsistenciaEscolarNinos")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<int?>("ComunidadID")
                        .HasColumnType("int");

                    b.Property<string>("DisponibilidadServiciosApoyoAdultosMayores")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DisponibilidadServiciosMujeresVictimasViolencia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DisponibilidadServiciosSaludMujer")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EstaEmpleadoPersonalmente")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EstadoMigratorio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaRegistroBeneficiario")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IngresosSuficientesNecesidades")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("InscritoProgramaEducacionCapacitacionActual")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("MiembrosHogarEmpleados")
                        .HasColumnType("int");

                    b.Property<string>("NinosHogarAsistenEscuela")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NivelEducacionCompletado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("NumeroPersonasHogar")
                        .HasColumnType("int");

                    b.Property<string>("OtroBarrerasAsistenciaEscolar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OtroEstadoMigratorio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OtroNivelEducacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OtroPaisOrigen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OtroTipoSituacionLaboral")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OtroTipoTrabajoRealizado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaisOrigen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PercepcionAccesoIgualOportunidadesLaboralesMujeres")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("RangoEdad")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TiempoEnCostaRicaSiMigrante")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TiempoViviendoEnComunidadActual")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoSituacionLaboral")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoTrabajoRealizadoSiEmpleado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ViviendaAlquiladaOPropia")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BeneficiarioID");

                    b.HasIndex("ComunidadID");

                    b.ToTable("Beneficiarios");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.BeneficiariosProgramasProyectos", b =>
                {
                    b.Property<int>("BeneficiarioID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ProgramaProyectoID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("EstadoParticipacionBeneficiario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaInscripcionBeneficiario")
                        .HasColumnType("DATE");

                    b.Property<string>("NotasAdicionales")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("BeneficiarioID", "ProgramaProyectoID");

                    b.HasIndex("ProgramaProyectoID");

                    b.ToTable("BeneficiariosProgramasProyectos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.CamposInteresVocacional", b =>
                {
                    b.Property<int>("CampoInteresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampoInteresID"));

                    b.Property<string>("DescripcionCampo")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("NombreCampo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CampoInteresID");

                    b.ToTable("CamposInteresVocacional");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Comunidades", b =>
                {
                    b.Property<int>("ComunidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComunidadID"));

                    b.Property<string>("NombreComunidad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NotasComunidad")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("UbicacionDetallada")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("ComunidadID");

                    b.ToTable("Comunidades");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.EvaluacionesPrograma", b =>
                {
                    b.Property<int>("EvaluacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvaluacionID"));

                    b.Property<string>("ActividadesRecreativasCulturalesInteresantes")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("AplicaraLoAprendidoFuturo")
                        .HasColumnType("int");

                    b.Property<string>("AspectoMasValiosoExperiencia")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ComentariosAdicionalesEvaluacion")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ComentariosAlojamientoHotel")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ComoCompartiraAprendidoUniversidad")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("EsfuerzoIntegracionComunidades")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExpectativasOriginalesCumplidas")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaEvaluacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InformacionPreviaUtil")
                        .HasColumnType("int");

                    b.Property<string>("NombreProgramaUniversidadEvaluador")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ParteMasDificil")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ParteMasGratificante")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<int>("ParticipacionID")
                        .HasColumnType("int");

                    b.Property<bool?>("PermiteSerUsadoComoReferencia")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramaInmersionCulturalAyudoHumildad")
                        .HasColumnType("int");

                    b.Property<string>("QueDiraOtrosSobrePrograma")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("RazonesOriginalesParticipacion")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("RecomendariaProgramaOtros")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TresCosasAprendidasSobreSiMismo")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("VisitaSitioComunidadFavoritaYPorQue")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("EvaluacionID");

                    b.HasIndex("ParticipacionID");

                    b.ToTable("EvaluacionesPrograma");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.FuentesConocimiento", b =>
                {
                    b.Property<int>("FuenteConocimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuenteConocimientoID"));

                    b.Property<string>("NombreFuente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FuenteConocimientoID");

                    b.ToTable("FuentesConocimiento");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.GruposComunitarios", b =>
                {
                    b.Property<int>("GrupoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupoID"));

                    b.Property<int?>("ComunidadID")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionGrupo")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("EmailContactoGrupo")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("NombreGrupo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PersonaContactoPrincipal")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TelefonoContactoGrupo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TipoGrupo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GrupoID");

                    b.HasIndex("ComunidadID");

                    b.ToTable("GruposComunitarios");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.NivelesIdioma", b =>
                {
                    b.Property<int>("NivelIdiomaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NivelIdiomaID"));

                    b.Property<string>("NombreNivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NivelIdiomaID");

                    b.ToTable("NivelesIdioma");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ParticipacionesActivas", b =>
                {
                    b.Property<int>("ParticipacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipacionID"));

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaFinParticipacion")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("FechaInicioParticipacion")
                        .HasColumnType("DATE");

                    b.Property<int?>("HorasTCUCompletadas")
                        .HasColumnType("int");

                    b.Property<string>("NotasSupervisor")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<int>("ProgramaProyectoID")
                        .HasColumnType("int");

                    b.Property<string>("RolDesempenado")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SolicitudID")
                        .HasColumnType("int");

                    b.HasKey("ParticipacionID");

                    b.HasIndex("ProgramaProyectoID");

                    b.HasIndex("SolicitudID");

                    b.ToTable("ParticipacionesActivas");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Permisos", b =>
                {
                    b.Property<int>("PermisoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoID"));

                    b.Property<string>("DescripcionPermiso")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PermisoID");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ProgramaProyectoComunidades", b =>
                {
                    b.Property<int>("ProgramaProyectoID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ComunidadID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ProgramaProyectoID", "ComunidadID");

                    b.HasIndex("ComunidadID");

                    b.ToTable("ProgramaProyectoComunidades");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ProgramaProyectoGrupos", b =>
                {
                    b.Property<int>("ProgramaProyectoID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("GrupoID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ProgramaProyectoID", "GrupoID");

                    b.HasIndex("GrupoID");

                    b.ToTable("ProgramaProyectoGrupos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ProgramasProyectosONG", b =>
                {
                    b.Property<int>("ProgramaProyectoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramaProyectoID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("EstadoProgramaProyecto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaFinEstimada")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaFinReal")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaInicioEstimada")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaInicioReal")
                        .HasColumnType("DATE");

                    b.Property<string>("NombreProgramaProyecto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ResponsablePrincipalONGUsuarioID")
                        .HasColumnType("int");

                    b.Property<string>("TipoIniciativa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProgramaProyectoID");

                    b.HasIndex("ResponsablePrincipalONGUsuarioID");

                    b.ToTable("ProgramasProyectosONG");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.RegistrosAuditoria", b =>
                {
                    b.Property<int>("AuditoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditoriaID"));

                    b.Property<string>("DetallesCambio")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("DireccionIp")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("EntidadAfectada")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaHoraEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdEntidadAfectada")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NombreUsuarioEjecutor")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioEjecutorId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditoriaID");

                    b.ToTable("RegistrosAuditoria");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.RolPermisos", b =>
                {
                    b.Property<int>("RolUsuarioID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("PermisoID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("RolUsuarioID", "PermisoID");

                    b.HasIndex("PermisoID");

                    b.ToTable("RolPermisos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.RolesSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionRol")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("VN_Center.Models.Entities.SolicitudCamposInteres", b =>
                {
                    b.Property<int>("SolicitudID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CampoInteresID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("SolicitudID", "CampoInteresID");

                    b.HasIndex("CampoInteresID");

                    b.ToTable("SolicitudCamposInteres");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Solicitudes", b =>
                {
                    b.Property<int>("SolicitudID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudID"));

                    b.Property<string>("AlergiasRestriccionesDieteticas")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("AniosEntrenamientoFormalEsp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CarreraAreaEstudio")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ComodidadHabilidadesEsp")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionSalidaZonaConfort")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Direccion")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("DuracionEstancia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DuracionEstanciaOtro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("EmailContactoEmergencia")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("EnsayoContribucionAprendizajeComunidad")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("EnsayoExperienciasTransculturalesPrevias")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("EnsayoHabilidadesConocimientosAdquirir")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("EnsayoRelacionEstudiosIntereses")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("EstadoSolicitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExperienciaLaboralRelevante")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ExperienciaPreviaSVL")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("FechaEnvioSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpiracionPasaporte")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaGraduacionEsperada")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaInicioPreferida")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("DATE");

                    b.Property<int?>("FuenteConocimientoID")
                        .HasColumnType("int");

                    b.Property<string>("FuenteConocimientoOtro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HabilidadesRelevantes")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("InfoPersonalFamiliaHobbies")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("InformacionAdicionalPersonal")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("MotivacionInteresCR")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<int?>("NivelIdiomaEspañolID")
                        .HasColumnType("int");

                    b.Property<string>("NombreContactoEmergencia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreUniversidad")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OtrosIdiomasHablados")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("PasaporteValidoSeisMeses")
                        .HasColumnType("bit");

                    b.Property<string>("PathCV")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("PathCartaRecomendacion")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool?>("PermiteContactoWhatsApp")
                        .HasColumnType("bit");

                    b.Property<string>("PreferenciasAlojamientoFamilia")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ProfesionOcupacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RelacionContactoEmergencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SolicitudesEspecialesAlojamiento")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TelefonoContactoEmergencia")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TipoSolicitud")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsuarioCreadorId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SolicitudID");

                    b.HasIndex("FuenteConocimientoID");

                    b.HasIndex("NivelIdiomaEspañolID");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.SolicitudesInformacionGeneral", b =>
                {
                    b.Property<int>("SolicitudInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudInfoID"));

                    b.Property<string>("EmailContacto")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("EstadoSolicitudInfo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuenteConocimientoID")
                        .HasColumnType("int");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NotasSeguimiento")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<bool?>("PermiteContactoWhatsApp")
                        .HasColumnType("bit");

                    b.Property<string>("PreguntasEspecificas")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("ProgramaDeInteres")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProgramaDeInteresOtro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelefonoContacto")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("UsuarioAsignadoID")
                        .HasColumnType("int");

                    b.HasKey("SolicitudInfoID");

                    b.HasIndex("FuenteConocimientoID");

                    b.HasIndex("UsuarioAsignadoID");

                    b.ToTable("SolicitudesInformacionGeneral");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.TiposAsistencia", b =>
                {
                    b.Property<int>("TipoAsistenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoAsistenciaID"));

                    b.Property<string>("NombreAsistencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TipoAsistenciaID");

                    b.ToTable("TiposAsistencia");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.UsuariosSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaUltimoAcceso")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.RolesSistema", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.UsuariosSistema", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.UsuariosSistema", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.RolesSistema", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.UsuariosSistema", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.UsuariosSistema", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VN_Center.Models.Entities.BeneficiarioAsistenciaRecibida", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.Beneficiarios", "Beneficiario")
                        .WithMany("BeneficiarioAsistenciaRecibida")
                        .HasForeignKey("BeneficiarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.TiposAsistencia", "TipoAsistencia")
                        .WithMany("BeneficiarioAsistenciaRecibida")
                        .HasForeignKey("TipoAsistenciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiario");

                    b.Navigation("TipoAsistencia");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.BeneficiarioGrupos", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.Beneficiarios", "Beneficiario")
                        .WithMany("BeneficiarioGrupos")
                        .HasForeignKey("BeneficiarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.GruposComunitarios", "GrupoComunitario")
                        .WithMany("BeneficiarioGrupos")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiario");

                    b.Navigation("GrupoComunitario");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Beneficiarios", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.Comunidades", "Comunidad")
                        .WithMany("Beneficiarios")
                        .HasForeignKey("ComunidadID");

                    b.Navigation("Comunidad");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.BeneficiariosProgramasProyectos", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.Beneficiarios", "Beneficiario")
                        .WithMany("BeneficiariosProgramasProyectos")
                        .HasForeignKey("BeneficiarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.ProgramasProyectosONG", "ProgramaProyecto")
                        .WithMany("BeneficiariosProgramasProyectos")
                        .HasForeignKey("ProgramaProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiario");

                    b.Navigation("ProgramaProyecto");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.EvaluacionesPrograma", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.ParticipacionesActivas", "ParticipacionActiva")
                        .WithMany("EvaluacionesPrograma")
                        .HasForeignKey("ParticipacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParticipacionActiva");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.GruposComunitarios", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.Comunidades", "Comunidad")
                        .WithMany("GruposComunitarios")
                        .HasForeignKey("ComunidadID");

                    b.Navigation("Comunidad");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ParticipacionesActivas", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.ProgramasProyectosONG", "ProgramaProyecto")
                        .WithMany("ParticipacionesActivas")
                        .HasForeignKey("ProgramaProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.Solicitudes", "Solicitud")
                        .WithMany("ParticipacionesActivas")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramaProyecto");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ProgramaProyectoComunidades", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.Comunidades", "Comunidad")
                        .WithMany("ProgramaProyectoComunidades")
                        .HasForeignKey("ComunidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.ProgramasProyectosONG", "ProgramaProyecto")
                        .WithMany("ProgramaProyectoComunidades")
                        .HasForeignKey("ProgramaProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comunidad");

                    b.Navigation("ProgramaProyecto");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ProgramaProyectoGrupos", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.GruposComunitarios", "GrupoComunitario")
                        .WithMany("ProgramaProyectoGrupos")
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.ProgramasProyectosONG", "ProgramaProyecto")
                        .WithMany("ProgramaProyectoGrupos")
                        .HasForeignKey("ProgramaProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoComunitario");

                    b.Navigation("ProgramaProyecto");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ProgramasProyectosONG", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.UsuariosSistema", "ResponsablePrincipalONG")
                        .WithMany("ProgramasProyectosONGResponsable")
                        .HasForeignKey("ResponsablePrincipalONGUsuarioID");

                    b.Navigation("ResponsablePrincipalONG");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.RolPermisos", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.Permisos", "Permisos")
                        .WithMany("RolPermisos")
                        .HasForeignKey("PermisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.RolesSistema", "RolesSistema")
                        .WithMany("RolPermisos")
                        .HasForeignKey("RolUsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permisos");

                    b.Navigation("RolesSistema");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.SolicitudCamposInteres", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.CamposInteresVocacional", "CampoInteresVocacional")
                        .WithMany("SolicitudCamposInteres")
                        .HasForeignKey("CampoInteresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VN_Center.Models.Entities.Solicitudes", "Solicitud")
                        .WithMany("SolicitudCamposInteres")
                        .HasForeignKey("SolicitudID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampoInteresVocacional");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Solicitudes", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.FuentesConocimiento", "FuentesConocimiento")
                        .WithMany("Solicitudes")
                        .HasForeignKey("FuenteConocimientoID");

                    b.HasOne("VN_Center.Models.Entities.NivelesIdioma", "NivelesIdioma")
                        .WithMany("Solicitudes")
                        .HasForeignKey("NivelIdiomaEspañolID");

                    b.Navigation("FuentesConocimiento");

                    b.Navigation("NivelesIdioma");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.SolicitudesInformacionGeneral", b =>
                {
                    b.HasOne("VN_Center.Models.Entities.FuentesConocimiento", "FuenteConocimiento")
                        .WithMany()
                        .HasForeignKey("FuenteConocimientoID");

                    b.HasOne("VN_Center.Models.Entities.UsuariosSistema", "UsuarioAsignado")
                        .WithMany("SolicitudesInformacionGeneralAsignadas")
                        .HasForeignKey("UsuarioAsignadoID");

                    b.Navigation("FuenteConocimiento");

                    b.Navigation("UsuarioAsignado");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Beneficiarios", b =>
                {
                    b.Navigation("BeneficiarioAsistenciaRecibida");

                    b.Navigation("BeneficiarioGrupos");

                    b.Navigation("BeneficiariosProgramasProyectos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.CamposInteresVocacional", b =>
                {
                    b.Navigation("SolicitudCamposInteres");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Comunidades", b =>
                {
                    b.Navigation("Beneficiarios");

                    b.Navigation("GruposComunitarios");

                    b.Navigation("ProgramaProyectoComunidades");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.FuentesConocimiento", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.GruposComunitarios", b =>
                {
                    b.Navigation("BeneficiarioGrupos");

                    b.Navigation("ProgramaProyectoGrupos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.NivelesIdioma", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ParticipacionesActivas", b =>
                {
                    b.Navigation("EvaluacionesPrograma");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Permisos", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.ProgramasProyectosONG", b =>
                {
                    b.Navigation("BeneficiariosProgramasProyectos");

                    b.Navigation("ParticipacionesActivas");

                    b.Navigation("ProgramaProyectoComunidades");

                    b.Navigation("ProgramaProyectoGrupos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.RolesSistema", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.Solicitudes", b =>
                {
                    b.Navigation("ParticipacionesActivas");

                    b.Navigation("SolicitudCamposInteres");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.TiposAsistencia", b =>
                {
                    b.Navigation("BeneficiarioAsistenciaRecibida");
                });

            modelBuilder.Entity("VN_Center.Models.Entities.UsuariosSistema", b =>
                {
                    b.Navigation("ProgramasProyectosONGResponsable");

                    b.Navigation("SolicitudesInformacionGeneralAsignadas");
                });
#pragma warning restore 612, 618
        }
    }
}
