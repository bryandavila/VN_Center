    @model VN_Center.Models.ViewModels.DashboardViewModel
    @inject VN_Center.Data.VNCenterDbContext Context // Inyectar DbContext para otros datos si es necesario directamente

@{
    ViewData["title"] = "Dashboard Principal";
    ViewData["pageTitle"] = "Dashboard";

    // Puedes definir variables para los iconos aquí si quieres
    string iconSolicitudes = "bx bx-file-blank";
    string iconBeneficiarios = "bx bx-user-heart";
    string iconProgramas = "bx bx-briefcase-alt-2";
    string iconComunidades = "bx bx-arch";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="row">
        <div class="col-lg-3 col-md-6 col-sm-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div class="card-info">
                            <p class="card-text">@Html.DisplayNameFor(model => model.TotalSolicitudes)</p>
                            <div class="d-flex align-items-end mb-2">
                                <h4 class="card-title mb-0 me-2">@Model.TotalSolicitudes</h4>
                                @* <small class="text-success">(+29%)</small> *@ @* Ejemplo de cambio porcentual *@
                            </div>
                            <small>Total de solicitudes recibidas</small>
                        </div>
                        <div class="card-icon">
                            <span class="badge bg-label-primary rounded p-2">
                                <i class="@iconSolicitudes bx-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 col-sm-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div class="card-info">
                            <p class="card-text">@Html.DisplayNameFor(model => model.TotalBeneficiarios)</p>
                            <div class="d-flex align-items-end mb-2">
                                <h4 class="card-title mb-0 me-2">@Model.TotalBeneficiarios</h4>
                            </div>
                            <small>Total de beneficiarios registrados</small>
                        </div>
                        <div class="card-icon">
                            <span class="badge bg-label-info rounded p-2">
                                <i class="@iconBeneficiarios bx-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 col-sm-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div class="card-info">
                            <p class="card-text">@Html.DisplayNameFor(model => model.TotalProgramasActivos)</p>
                            <div class="d-flex align-items-end mb-2">
                                <h4 class="card-title mb-0 me-2">@Model.TotalProgramasActivos</h4>
                            </div>
                            <small>Programas en curso o planificación</small>
                        </div>
                        <div class="card-icon">
                            <span class="badge bg-label-success rounded p-2">
                                <i class="@iconProgramas bx-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3 col-md-6 col-sm-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div class="card-info">
                            <p class="card-text">@Html.DisplayNameFor(model => model.TotalComunidades)</p>
                            <div class="d-flex align-items-end mb-2">
                                <h4 class="card-title mb-0 me-2">@Model.TotalComunidades</h4>
                            </div>
                            <small>Total de comunidades registradas</small>
                        </div>
                        <div class="card-icon">
                            <span class="badge bg-label-warning rounded p-2">
                                <i class="@iconComunidades bx-sm"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* Aquí podrías añadir más filas de tarjetas o gráficos en el futuro *@
    @* Ejemplo de una fila para una tabla de "Actividad Reciente" o "Próximos Eventos" *@
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Actividad Reciente (Ejemplo)</h5>
                </div>
                <div class="card-body">
                    <p>Aquí podrías listar las últimas 5 solicitudes recibidas, o los próximos inicios de programas, etc.</p>
                    @* <ul>
                        @foreach(var solicitud in await Context.Solicitudes.OrderByDescending(s => s.FechaEnvioSolicitud).Take(5).ToListAsync())
                        {
                            <li>@solicitud.Nombres @solicitud.Apellidos - @solicitud.FechaEnvioSolicitud.ToShortDateString()</li>
                        }
                        </ul>
                        *@
                </div>
            </div>
        </div>
    </div>

</div>
