@inject IHttpContextAccessor httpContextAccessor

<!DOCTYPE html>
<html lang="en"
      class='light-style layout-menu-fixed'
      data-theme="theme-default" data-assets-path='@((httpContextAccessor.HttpContext?.Request.PathBase ?? "") + "/")'
      data-framework="aspnetcore-mvc"
      data-template='vertical-menu-aspnet-core-mvc-template-free'>

<head>
    <meta charset="utf-f" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

    @{
        string title = ViewData["title"] as string ?? "";
        string appName = TempData.Peek("appName") as string ?? "";
        string productPage = TempData.Peek("productPage") as string ?? "";
    }
    <title>@title | @appName - VN_Center</title>
    <meta name="description" content="" />

    <link rel="canonical" href='@productPage'>
    <link rel="icon" type="image/x-icon" href="~/img/favicon/favicon.ico" />

    @await Html.PartialAsync("Sections/_Styles")

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    @RenderSection("VendorStyles", required: false)

    @RenderSection("PageStyles", required: false)

    @await Html.PartialAsync("Sections/_ScriptsIncludes")
</head>

<body>
    @RenderBody()
    @await Html.PartialAsync("Sections/_Scripts")

    @RenderSection("VendorScripts", required: false)

    <script src='~/js/main.js'></script>

    @RenderSection("PageScripts", required: false)

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    @* ESTA ES LA UBICACIÓN CORRECTA PARA LA SECCIÓN DE SCRIPTS DE PÁGINA *@
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        // Script para auto-ocultar alertas de TempData
        document.addEventListener('DOMContentLoaded', function () {
            const autoDismissAlerts = document.querySelectorAll('.alert.alert-dismissible.fade.show');

            autoDismissAlerts.forEach(function(alertElement) {
                const displayDuration = 5000; // 5 segundos

                setTimeout(function() {
                    var bootstrapAlert = bootstrap.Alert.getInstance(alertElement);
                    if (bootstrapAlert) {
                        bootstrapAlert.close();
                    } else {
                        alertElement.classList.remove('show');
                        setTimeout(function() {
                            alertElement.style.display = 'none';
                        }, 150); // Coincide con la duración de la transición de desvanecimiento de Bootstrap
                    }
                }, displayDuration);
            });
        });
    </script>

    <script async defer src="https://buttons.github.io/buttons.js"></script>

</body>

</html>
