@* VN_Center/Views/Solicitudes/Details.cshtml *@
@model VN_Center.Models.Entities.Solicitudes
@using System.Security.Claims @* <--- AÑADIDO ESTE USING DIRECTIVE *@

@{
    ViewData["Title"] = "Detalles de la Solicitud";
    Func<bool?, string> FormatBoolean = b => b.HasValue ? (b.Value ? "Sí" : "No") : "No especificado";
}

<div class="container-xxl flex-grow-1 container-p-y">

    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Solicitudes /</span> Detalles de Solicitud No. @Model.SolicitudID
    </h4>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Solicitud de: @Model.Nombres @Model.Apellidos</h5>
            <div>
                <a asp-action="ExportDetailToPdf" asp-route-id="@Model.SolicitudID" class="btn btn-success me-2">
                    <i class="bx bx-printer me-1"></i> Exportar a PDF
                </a>
                @if (User.IsInRole("Administrador") || (Model.UsuarioCreadorId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
                {
                    <a asp-action="Edit" asp-route-id="@Model.SolicitudID" class="btn btn-primary me-2"><i class="bx bx-edit-alt me-1"></i> Editar</a>
                }
                <a asp-action="Index" class="btn btn-outline-secondary"><i class="bx bx-list-ul me-1"></i> Volver a la Lista</a>
            </div>
        </div>
        <div class="card-body">
            <div class="accordion mt-1" id="accordionSolicitudDetails">

                <div class="card accordion-item active">
                    <h2 class="accordion-header" id="headingPersonalDetails">
                        <button type="button" class="accordion-button" data-bs-toggle="collapse" data-bs-target="#collapsePersonalDetails" aria-expanded="true" aria-controls="collapsePersonalDetails">
                            Información Personal y de Contacto
                        </button>
                    </h2>
                    <div id="collapsePersonalDetails" class="accordion-collapse collapse show" aria-labelledby="headingPersonalDetails" data-bs-parent="#accordionSolicitudDetails">
                        <div class="accordion-body">
                            <dl class="row">
                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Nombres)</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.Nombres)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Apellidos)</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.Apellidos)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Email)</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.Email)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Telefono)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.Telefono) ? "No especificado" : Model.Telefono)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.PermiteContactoWhatsApp)</dt>
                                <dd class="col-sm-8">@FormatBoolean(Model.PermiteContactoWhatsApp)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FechaNacimiento)</dt>
                                <dd class="col-sm-8">@(Model.FechaNacimiento.HasValue ? Model.FechaNacimiento.Value.ToString("dd/MM/yyyy") : "No especificada")</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Direccion)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.Direccion) ? "No especificada" : Model.Direccion)</dd>
                            </dl>
                        </div>
                    </div>
                </div>

                <div class="card accordion-item">
                    <h2 class="accordion-header" id="headingDetallesSolicitudDetails">
                        <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#collapseDetallesSolicitudDetails" aria-expanded="false" aria-controls="collapseDetallesSolicitudDetails">
                            Detalles de la Solicitud y Documentación
                        </button>
                    </h2>
                    <div id="collapseDetallesSolicitudDetails" class="accordion-collapse collapse" aria-labelledby="headingDetallesSolicitudDetails" data-bs-parent="#accordionSolicitudDetails">
                        <div class="accordion-body">
                            <dl class="row">
                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.TipoSolicitud)</dt>
                                <dd class="col-sm-8">@Html.DisplayFor(model => model.TipoSolicitud)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FechaEnvioSolicitud)</dt>
                                <dd class="col-sm-8">@Model.FechaEnvioSolicitud.ToString("dd/MM/yyyy HH:mm")</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FechaInicioPreferida)</dt>
                                <dd class="col-sm-8">@(Model.FechaInicioPreferida.HasValue ? Model.FechaInicioPreferida.Value.ToString("dd/MM/yyyy") : "No especificada")</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.DuracionEstancia)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.DuracionEstancia) ? "No especificada" : Model.DuracionEstancia)</dd>

                                @if (!string.IsNullOrEmpty(Model.DuracionEstanciaOtro))
                                {
                                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.DuracionEstanciaOtro)</dt>
                                    <dd class="col-sm-8">@Html.DisplayFor(model => model.DuracionEstanciaOtro)</dd>
                                }

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.PasaporteValidoSeisMeses)</dt>
                                <dd class="col-sm-8">@FormatBoolean(Model.PasaporteValidoSeisMeses)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FechaExpiracionPasaporte)</dt>
                                <dd class="col-sm-8">@(Model.FechaExpiracionPasaporte.HasValue ? Model.FechaExpiracionPasaporte.Value.ToString("dd/MM/yyyy") : "No especificada")</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.ProfesionOcupacion)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.ProfesionOcupacion) ? "No especificada" : Model.ProfesionOcupacion)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.EstadoSolicitud)</dt>
                                <dd class="col-sm-8">
                                    @if (Model.EstadoSolicitud == "Aprobada")
                                    {
                                        <span class="badge bg-label-success me-1">@Model.EstadoSolicitud</span>
                                    }
                                    else if (Model.EstadoSolicitud == "Rechazada")
                                    {
                                        <span class="badge bg-label-danger me-1">@Model.EstadoSolicitud</span>
                                    }
                                    else if (Model.EstadoSolicitud == "En Revisión")
                                    {
                                        <span class="badge bg-label-warning me-1">@Model.EstadoSolicitud</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-label-info me-1">@Model.EstadoSolicitud</span>
                                    }
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>

                <div class="card accordion-item">
                    <h2 class="accordion-header" id="headingExperienciaDetails">
                        <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#collapseExperienciaDetails" aria-expanded="false" aria-controls="collapseExperienciaDetails">
                            Experiencia, Habilidades e Idiomas
                        </button>
                    </h2>
                    <div id="collapseExperienciaDetails" class="accordion-collapse collapse" aria-labelledby="headingExperienciaDetails" data-bs-parent="#accordionSolicitudDetails">
                        <div class="accordion-body">
                            <dl class="row">
                                <dt class="col-sm-12">@Html.DisplayNameFor(model => model.ExperienciaPreviaSVL)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.ExperienciaPreviaSVL) ? "No especificada" : Html.Raw(Model.ExperienciaPreviaSVL.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.ExperienciaLaboralRelevante)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.ExperienciaLaboralRelevante) ? "No especificada" : Html.Raw(Model.ExperienciaLaboralRelevante.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.HabilidadesRelevantes)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.HabilidadesRelevantes) ? "No especificada" : Html.Raw(Model.HabilidadesRelevantes.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-4 mt-3">@Html.DisplayNameFor(model => model.NivelesIdioma.NombreNivel)</dt>
                                <dd class="col-sm-8 mt-3">@(Model.NivelesIdioma?.NombreNivel ?? "No especificado")</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.ComodidadHabilidadesEsp)</dt>
                                <dd class="col-sm-8">@(Model.ComodidadHabilidadesEsp.HasValue ? Model.ComodidadHabilidadesEsp.Value.ToString() : "No especificado") / 5</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.OtrosIdiomasHablados)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.OtrosIdiomasHablados) ? "No especificado" : Model.OtrosIdiomasHablados)</dd>
                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.AniosEntrenamientoFormalEsp)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.AniosEntrenamientoFormalEsp) ? "No especificado" : Model.AniosEntrenamientoFormalEsp)</dd>
                            </dl>
                        </div>
                    </div>
                </div>

                <div class="card accordion-item">
                    <h2 class="accordion-header" id="headingMotivacionesDetails">
                        <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#collapseMotivacionesDetails" aria-expanded="false" aria-controls="collapseMotivacionesDetails">
                            Motivaciones y Conocimiento del Programa
                        </button>
                    </h2>
                    <div id="collapseMotivacionesDetails" class="accordion-collapse collapse" aria-labelledby="headingMotivacionesDetails" data-bs-parent="#accordionSolicitudDetails">
                        <div class="accordion-body">
                            <dl class="row">
                                <dt class="col-sm-12">@Html.DisplayNameFor(model => model.MotivacionInteresCR)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.MotivacionInteresCR) ? "No especificada" : Html.Raw(Model.MotivacionInteresCR.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.DescripcionSalidaZonaConfort)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.DescripcionSalidaZonaConfort) ? "No especificada" : Html.Raw(Model.DescripcionSalidaZonaConfort.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.InformacionAdicionalPersonal)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.InformacionAdicionalPersonal) ? "No especificada" : Html.Raw(Model.InformacionAdicionalPersonal.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-4 mt-3">@Html.DisplayNameFor(model => model.FuentesConocimiento.NombreFuente)</dt>
                                <dd class="col-sm-8 mt-3">@(Model.FuentesConocimiento?.NombreFuente ?? "No especificado")</dd>

                                @if (!string.IsNullOrEmpty(Model.FuenteConocimientoOtro))
                                {
                                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FuenteConocimientoOtro)</dt>
                                    <dd class="col-sm-8">@Html.DisplayFor(model => model.FuenteConocimientoOtro)</dd>
                                }
                            </dl>
                        </div>
                    </div>
                </div>

                @if (Model.TipoSolicitud == "Pasantia")
                {
                    <div class="card accordion-item">
                        <h2 class="accordion-header" id="headingPasantiaDetails">
                            <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#collapsePasantiaDetails" aria-expanded="false" aria-controls="collapsePasantiaDetails">
                                Información Específica de Pasantías
                            </button>
                        </h2>
                        <div id="collapsePasantiaDetails" class="accordion-collapse collapse" aria-labelledby="headingPasantiaDetails" data-bs-parent="#accordionSolicitudDetails">
                            <div class="accordion-body">
                                <dl class="row">
                                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.NombreUniversidad)</dt>
                                    <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.NombreUniversidad) ? "No aplica" : Model.NombreUniversidad)</dd>

                                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.CarreraAreaEstudio)</dt>
                                    <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.CarreraAreaEstudio) ? "No aplica" : Model.CarreraAreaEstudio)</dd>

                                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FechaGraduacionEsperada)</dt>
                                    <dd class="col-sm-8">@(Model.FechaGraduacionEsperada.HasValue ? Model.FechaGraduacionEsperada.Value.ToString("dd/MM/yyyy") : "No aplica")</dd>

                                    <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.PreferenciasAlojamientoFamilia)</dt>
                                    <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.PreferenciasAlojamientoFamilia) ? "No especificada" : Html.Raw(Model.PreferenciasAlojamientoFamilia.Replace("\n", "<br />")))</dd>

                                    <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.EnsayoRelacionEstudiosIntereses)</dt>
                                    <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.EnsayoRelacionEstudiosIntereses) ? "No especificado" : Html.Raw(Model.EnsayoRelacionEstudiosIntereses.Replace("\n", "<br />")))</dd>

                                    <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.EnsayoHabilidadesConocimientosAdquirir)</dt>
                                    <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.EnsayoHabilidadesConocimientosAdquirir) ? "No especificado" : Html.Raw(Model.EnsayoHabilidadesConocimientosAdquirir.Replace("\n", "<br />")))</dd>

                                    <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.EnsayoContribucionAprendizajeComunidad)</dt>
                                    <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.EnsayoContribucionAprendizajeComunidad) ? "No especificado" : Html.Raw(Model.EnsayoContribucionAprendizajeComunidad.Replace("\n", "<br />")))</dd>

                                    <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.EnsayoExperienciasTransculturalesPrevias)</dt>
                                    <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.EnsayoExperienciasTransculturalesPrevias) ? "No especificado" : Html.Raw(Model.EnsayoExperienciasTransculturalesPrevias.Replace("\n", "<br />")))</dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                }

                <div class="card accordion-item">
                    <h2 class="accordion-header" id="headingEmergenciaDetails">
                        <button type="button" class="accordion-button collapsed" data-bs-toggle="collapse" data-bs-target="#collapseEmergenciaDetails" aria-expanded="false" aria-controls="collapseEmergenciaDetails">
                            Contacto de Emergencia e Información Adicional
                        </button>
                    </h2>
                    <div id="collapseEmergenciaDetails" class="accordion-collapse collapse" aria-labelledby="headingEmergenciaDetails" data-bs-parent="#accordionSolicitudDetails">
                        <div class="accordion-body">
                            <h6 class="mb-3 text-primary">Información de Contacto de Emergencia</h6>
                            <dl class="row">
                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.NombreContactoEmergencia)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.NombreContactoEmergencia) ? "No especificado" : Model.NombreContactoEmergencia)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.RelacionContactoEmergencia)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.RelacionContactoEmergencia) ? "No especificado" : Model.RelacionContactoEmergencia)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.TelefonoContactoEmergencia)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.TelefonoContactoEmergencia) ? "No especificado" : Model.TelefonoContactoEmergencia)</dd>

                                <dt class="col-sm-4">@Html.DisplayNameFor(model => model.EmailContactoEmergencia)</dt>
                                <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.EmailContactoEmergencia) ? "No especificado" : Model.EmailContactoEmergencia)</dd>
                            </dl>
                            <hr class="my-4" />
                            <h6 class="mb-3 text-primary">Información Adicional para Alojamiento (si aplica)</h6>
                            <dl class="row">
                                <dt class="col-sm-12">@Html.DisplayNameFor(model => model.InfoPersonalFamiliaHobbies)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.InfoPersonalFamiliaHobbies) ? "No especificada" : Html.Raw(Model.InfoPersonalFamiliaHobbies.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.AlergiasRestriccionesDieteticas)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.AlergiasRestriccionesDieteticas) ? "No especificada" : Html.Raw(Model.AlergiasRestriccionesDieteticas.Replace("\n", "<br />")))</dd>

                                <dt class="col-sm-12 mt-3">@Html.DisplayNameFor(model => model.SolicitudesEspecialesAlojamiento)</dt>
                                <dd class="col-sm-12">@(string.IsNullOrWhiteSpace(Model.SolicitudesEspecialesAlojamiento) ? "No especificada" : Html.Raw(Model.SolicitudesEspecialesAlojamiento.Replace("\n", "<br />")))</dd>
                            </dl>
                        </div>
                    </div>
                </div>

            </div>
        </div> @* Fin Card Body *@
    </div> @* Fin Card *@
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var accordionItems = document.querySelectorAll('#accordionSolicitudDetails .accordion-collapse');
            // accordionItems.forEach(function (item) {
            //     new bootstrap.Collapse(item, { toggle: false }).show();
            // });
        });
    </script>
}
