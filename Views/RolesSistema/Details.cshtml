@model VN_Center.Models.Entities.RolesSistema
@{
    ViewData["Title"] = "Detalles del Rol";
}

<div class="container-xxl flex-grow-1 container-p-y">

    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Administración / Roles del Sistema /</span> Detalles
    </h4>

    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    @* Actualizado para usar Model.Name *@
                    <h5 class="mb-0">Rol: @Model.Name</h5>
                    <div>
                        @* Actualizado asp-route-id para usar Model.Id *@
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2"><i class="bx bx-edit-alt me-1"></i> Editar</a>
                        <a asp-action="Index" class="btn btn-outline-secondary"><i class="bx bx-list-ul me-1"></i> Volver a la Lista</a>
                    </div>
                </div>
                <div class="card-body">
                    <dl class="row">
                        @* Actualizado DisplayNameFor y DisplayFor para usar "Name" *@
                        <dt class="col-sm-3 text-md-end">@Html.DisplayNameFor(model => model.Name)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>

                        <dt class="col-sm-3 text-md-end">@Html.DisplayNameFor(model => model.DescripcionRol)</dt>
                        <dd class="col-sm-9">@(string.IsNullOrWhiteSpace(Model.DescripcionRol) ? "Sin descripción" : Html.Raw(Model.DescripcionRol.Replace("\n", "<br />")))</dd>
                    </dl>
                    @* Aquí se podrían listar los permisos asignados a este rol.
                    Esto requeriría cargar los permisos en el método Details del controlador:
                    var rol = await _roleManager.FindByIdAsync(id.Value.ToString());
                    if (rol != null)
                    {
                        // Cargar explícitamente los permisos asociados
                        await _context.Entry(rol).Collection(r => r.RolPermisos).Query().Include(rp => rp.Permisos).LoadAsync();
                        // O pasarlos por ViewBag:
                        // ViewBag.PermisosDelRol = rol.RolPermisos.Select(rp => rp.Permisos.NombrePermiso).ToList();
                    }
                    *@
                    @* @if (ViewBag.PermisosDelRol != null && ((List<string>)ViewBag.PermisosDelRol).Any())
                    {
                        <h6 class="mt-4">Permisos Asignados:</h6>
                        <ul>
                            @foreach (var permiso in (List<string>)ViewBag.PermisosDelRol)
                            {
                                <li>@permiso</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="mt-3">Este rol no tiene permisos asignados directamente.</p>
                    } *@
                </div>
            </div>
        </div>
    </div>
</div>
